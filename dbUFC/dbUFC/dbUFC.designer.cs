#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dbUFC
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbUFC")]
	public partial class dbUFCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAllenatore(Allenatore instance);
    partial void UpdateAllenatore(Allenatore instance);
    partial void DeleteAllenatore(Allenatore instance);
    partial void InsertArbitro(Arbitro instance);
    partial void UpdateArbitro(Arbitro instance);
    partial void DeleteArbitro(Arbitro instance);
    partial void InsertArteMarzialePraticata(ArteMarzialePraticata instance);
    partial void UpdateArteMarzialePraticata(ArteMarzialePraticata instance);
    partial void DeleteArteMarzialePraticata(ArteMarzialePraticata instance);
    partial void InsertAtleta(Atleta instance);
    partial void UpdateAtleta(Atleta instance);
    partial void DeleteAtleta(Atleta instance);
    partial void InsertCaratteristicheAtletaInIncontro(CaratteristicheAtletaInIncontro instance);
    partial void UpdateCaratteristicheAtletaInIncontro(CaratteristicheAtletaInIncontro instance);
    partial void DeleteCaratteristicheAtletaInIncontro(CaratteristicheAtletaInIncontro instance);
    partial void InsertCaratteristicheIncontro(CaratteristicheIncontro instance);
    partial void UpdateCaratteristicheIncontro(CaratteristicheIncontro instance);
    partial void DeleteCaratteristicheIncontro(CaratteristicheIncontro instance);
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertEntrataUscita(EntrataUscita instance);
    partial void UpdateEntrataUscita(EntrataUscita instance);
    partial void DeleteEntrataUscita(EntrataUscita instance);
    partial void InsertFisioterapista(Fisioterapista instance);
    partial void UpdateFisioterapista(Fisioterapista instance);
    partial void DeleteFisioterapista(Fisioterapista instance);
    partial void InsertGiudica(Giudica instance);
    partial void UpdateGiudica(Giudica instance);
    partial void DeleteGiudica(Giudica instance);
    partial void InsertGiudice(Giudice instance);
    partial void UpdateGiudice(Giudice instance);
    partial void DeleteGiudice(Giudice instance);
    partial void InsertMedicazione(Medicazione instance);
    partial void UpdateMedicazione(Medicazione instance);
    partial void DeleteMedicazione(Medicazione instance);
    partial void InsertMedico(Medico instance);
    partial void UpdateMedico(Medico instance);
    partial void DeleteMedico(Medico instance);
    partial void InsertPisicologo(Pisicologo instance);
    partial void UpdatePisicologo(Pisicologo instance);
    partial void DeletePisicologo(Pisicologo instance);
    partial void InsertProgrammazioneIncontro(ProgrammazioneIncontro instance);
    partial void UpdateProgrammazioneIncontro(ProgrammazioneIncontro instance);
    partial void DeleteProgrammazioneIncontro(ProgrammazioneIncontro instance);
    partial void InsertRecord(Record instance);
    partial void UpdateRecord(Record instance);
    partial void DeleteRecord(Record instance);
    partial void InsertSponsor(Sponsor instance);
    partial void UpdateSponsor(Sponsor instance);
    partial void DeleteSponsor(Sponsor instance);
    partial void InsertSponsorizzazioneTeam(SponsorizzazioneTeam instance);
    partial void UpdateSponsorizzazioneTeam(SponsorizzazioneTeam instance);
    partial void DeleteSponsorizzazioneTeam(SponsorizzazioneTeam instance);
    partial void InsertSponsorizzazioneIncontro(SponsorizzazioneIncontro instance);
    partial void UpdateSponsorizzazioneIncontro(SponsorizzazioneIncontro instance);
    partial void DeleteSponsorizzazioneIncontro(SponsorizzazioneIncontro instance);
    partial void InsertTeam(Team instance);
    partial void UpdateTeam(Team instance);
    partial void DeleteTeam(Team instance);
    #endregion
		
		public dbUFCDataContext() : 
				base(global::dbUFC.Properties.Settings.Default.dbUFCConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbUFCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbUFCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbUFCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbUFCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Allenatore> Allenatores
		{
			get
			{
				return this.GetTable<Allenatore>();
			}
		}
		
		public System.Data.Linq.Table<Arbitro> Arbitros
		{
			get
			{
				return this.GetTable<Arbitro>();
			}
		}
		
		public System.Data.Linq.Table<ArteMarzialePraticata> ArteMarzialePraticatas
		{
			get
			{
				return this.GetTable<ArteMarzialePraticata>();
			}
		}
		
		public System.Data.Linq.Table<Atleta> Atletas
		{
			get
			{
				return this.GetTable<Atleta>();
			}
		}
		
		public System.Data.Linq.Table<CaratteristicheAtletaInIncontro> CaratteristicheAtletaInIncontros
		{
			get
			{
				return this.GetTable<CaratteristicheAtletaInIncontro>();
			}
		}
		
		public System.Data.Linq.Table<CaratteristicheIncontro> CaratteristicheIncontros
		{
			get
			{
				return this.GetTable<CaratteristicheIncontro>();
			}
		}
		
		public System.Data.Linq.Table<Categoria> Categorias
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<EntrataUscita> EntrataUscitas
		{
			get
			{
				return this.GetTable<EntrataUscita>();
			}
		}
		
		public System.Data.Linq.Table<Fisioterapista> Fisioterapistas
		{
			get
			{
				return this.GetTable<Fisioterapista>();
			}
		}
		
		public System.Data.Linq.Table<Giudica> Giudicas
		{
			get
			{
				return this.GetTable<Giudica>();
			}
		}
		
		public System.Data.Linq.Table<Giudice> Giudices
		{
			get
			{
				return this.GetTable<Giudice>();
			}
		}
		
		public System.Data.Linq.Table<Medicazione> Medicaziones
		{
			get
			{
				return this.GetTable<Medicazione>();
			}
		}
		
		public System.Data.Linq.Table<Medico> Medicos
		{
			get
			{
				return this.GetTable<Medico>();
			}
		}
		
		public System.Data.Linq.Table<Pisicologo> Pisicologos
		{
			get
			{
				return this.GetTable<Pisicologo>();
			}
		}
		
		public System.Data.Linq.Table<ProgrammazioneIncontro> ProgrammazioneIncontros
		{
			get
			{
				return this.GetTable<ProgrammazioneIncontro>();
			}
		}
		
		public System.Data.Linq.Table<Record> Records
		{
			get
			{
				return this.GetTable<Record>();
			}
		}
		
		public System.Data.Linq.Table<Sponsor> Sponsors
		{
			get
			{
				return this.GetTable<Sponsor>();
			}
		}
		
		public System.Data.Linq.Table<SponsorizzazioneTeam> SponsorizzazioneTeams
		{
			get
			{
				return this.GetTable<SponsorizzazioneTeam>();
			}
		}
		
		public System.Data.Linq.Table<SponsorizzazioneIncontro> SponsorizzazioneIncontros
		{
			get
			{
				return this.GetTable<SponsorizzazioneIncontro>();
			}
		}
		
		public System.Data.Linq.Table<Team> Teams
		{
			get
			{
				return this.GetTable<Team>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Allenatore")]
	public partial class Allenatore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Telefono;
		
		private string _CodiceFiscale;
		
		private string _Cognome;
		
		private string _Nome;
		
		private string _TesseraClasseAllenatore;
		
		private EntitySet<ArteMarzialePraticata> _ArteMarzialePraticatas;
		
		private EntitySet<Team> _Teams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnTesseraClasseAllenatoreChanging(string value);
    partial void OnTesseraClasseAllenatoreChanged();
    #endregion
		
		public Allenatore()
		{
			this._ArteMarzialePraticatas = new EntitySet<ArteMarzialePraticata>(new Action<ArteMarzialePraticata>(this.attach_ArteMarzialePraticatas), new Action<ArteMarzialePraticata>(this.detach_ArteMarzialePraticatas));
			this._Teams = new EntitySet<Team>(new Action<Team>(this.attach_Teams), new Action<Team>(this.detach_Teams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Char(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TesseraClasseAllenatore", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string TesseraClasseAllenatore
		{
			get
			{
				return this._TesseraClasseAllenatore;
			}
			set
			{
				if ((this._TesseraClasseAllenatore != value))
				{
					this.OnTesseraClasseAllenatoreChanging(value);
					this.SendPropertyChanging();
					this._TesseraClasseAllenatore = value;
					this.SendPropertyChanged("TesseraClasseAllenatore");
					this.OnTesseraClasseAllenatoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Allenatore_ArteMarzialePraticata", Storage="_ArteMarzialePraticatas", ThisKey="CodiceFiscale", OtherKey="CodiceFiscaleAllenatore")]
		public EntitySet<ArteMarzialePraticata> ArteMarzialePraticatas
		{
			get
			{
				return this._ArteMarzialePraticatas;
			}
			set
			{
				this._ArteMarzialePraticatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Allenatore_Team", Storage="_Teams", ThisKey="CodiceFiscale", OtherKey="CodiceFiscaleAllenatore")]
		public EntitySet<Team> Teams
		{
			get
			{
				return this._Teams;
			}
			set
			{
				this._Teams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArteMarzialePraticatas(ArteMarzialePraticata entity)
		{
			this.SendPropertyChanging();
			entity.Allenatore = this;
		}
		
		private void detach_ArteMarzialePraticatas(ArteMarzialePraticata entity)
		{
			this.SendPropertyChanging();
			entity.Allenatore = null;
		}
		
		private void attach_Teams(Team entity)
		{
			this.SendPropertyChanging();
			entity.Allenatore = this;
		}
		
		private void detach_Teams(Team entity)
		{
			this.SendPropertyChanging();
			entity.Allenatore = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Arbitro")]
	public partial class Arbitro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Telefono;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _CodiceFiscale;
		
		private string _CodiceTesseraArbitro;
		
		private string _Classe;
		
		private string _NumeroPresenzeIncontriUfficiali;
		
		private EntitySet<CaratteristicheIncontro> _CaratteristicheIncontros;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnCodiceTesseraArbitroChanging(string value);
    partial void OnCodiceTesseraArbitroChanged();
    partial void OnClasseChanging(string value);
    partial void OnClasseChanged();
    partial void OnNumeroPresenzeIncontriUfficialiChanging(string value);
    partial void OnNumeroPresenzeIncontriUfficialiChanged();
    #endregion
		
		public Arbitro()
		{
			this._CaratteristicheIncontros = new EntitySet<CaratteristicheIncontro>(new Action<CaratteristicheIncontro>(this.attach_CaratteristicheIncontros), new Action<CaratteristicheIncontro>(this.detach_CaratteristicheIncontros));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Char(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceTesseraArbitro", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string CodiceTesseraArbitro
		{
			get
			{
				return this._CodiceTesseraArbitro;
			}
			set
			{
				if ((this._CodiceTesseraArbitro != value))
				{
					this.OnCodiceTesseraArbitroChanging(value);
					this.SendPropertyChanging();
					this._CodiceTesseraArbitro = value;
					this.SendPropertyChanged("CodiceTesseraArbitro");
					this.OnCodiceTesseraArbitroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classe", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Classe
		{
			get
			{
				return this._Classe;
			}
			set
			{
				if ((this._Classe != value))
				{
					this.OnClasseChanging(value);
					this.SendPropertyChanging();
					this._Classe = value;
					this.SendPropertyChanged("Classe");
					this.OnClasseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroPresenzeIncontriUfficiali", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string NumeroPresenzeIncontriUfficiali
		{
			get
			{
				return this._NumeroPresenzeIncontriUfficiali;
			}
			set
			{
				if ((this._NumeroPresenzeIncontriUfficiali != value))
				{
					this.OnNumeroPresenzeIncontriUfficialiChanging(value);
					this.SendPropertyChanging();
					this._NumeroPresenzeIncontriUfficiali = value;
					this.SendPropertyChanged("NumeroPresenzeIncontriUfficiali");
					this.OnNumeroPresenzeIncontriUfficialiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arbitro_CaratteristicheIncontro", Storage="_CaratteristicheIncontros", ThisKey="CodiceFiscale", OtherKey="CodiceFiscaleArbitro")]
		public EntitySet<CaratteristicheIncontro> CaratteristicheIncontros
		{
			get
			{
				return this._CaratteristicheIncontros;
			}
			set
			{
				this._CaratteristicheIncontros.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CaratteristicheIncontros(CaratteristicheIncontro entity)
		{
			this.SendPropertyChanging();
			entity.Arbitro = this;
		}
		
		private void detach_CaratteristicheIncontros(CaratteristicheIncontro entity)
		{
			this.SendPropertyChanging();
			entity.Arbitro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArteMarzialePraticata")]
	public partial class ArteMarzialePraticata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceFiscaleAllenatore;
		
		private string _ArteMarziale;
		
		private EntityRef<Allenatore> _Allenatore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceFiscaleAllenatoreChanging(string value);
    partial void OnCodiceFiscaleAllenatoreChanged();
    partial void OnArteMarzialeChanging(string value);
    partial void OnArteMarzialeChanged();
    #endregion
		
		public ArteMarzialePraticata()
		{
			this._Allenatore = default(EntityRef<Allenatore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscaleAllenatore", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscaleAllenatore
		{
			get
			{
				return this._CodiceFiscaleAllenatore;
			}
			set
			{
				if ((this._CodiceFiscaleAllenatore != value))
				{
					if (this._Allenatore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleAllenatoreChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscaleAllenatore = value;
					this.SendPropertyChanged("CodiceFiscaleAllenatore");
					this.OnCodiceFiscaleAllenatoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArteMarziale", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ArteMarziale
		{
			get
			{
				return this._ArteMarziale;
			}
			set
			{
				if ((this._ArteMarziale != value))
				{
					this.OnArteMarzialeChanging(value);
					this.SendPropertyChanging();
					this._ArteMarziale = value;
					this.SendPropertyChanged("ArteMarziale");
					this.OnArteMarzialeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Allenatore_ArteMarzialePraticata", Storage="_Allenatore", ThisKey="CodiceFiscaleAllenatore", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public Allenatore Allenatore
		{
			get
			{
				return this._Allenatore.Entity;
			}
			set
			{
				Allenatore previousValue = this._Allenatore.Entity;
				if (((previousValue != value) 
							|| (this._Allenatore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Allenatore.Entity = null;
						previousValue.ArteMarzialePraticatas.Remove(this);
					}
					this._Allenatore.Entity = value;
					if ((value != null))
					{
						value.ArteMarzialePraticatas.Add(this);
						this._CodiceFiscaleAllenatore = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscaleAllenatore = default(string);
					}
					this.SendPropertyChanged("Allenatore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Atleta")]
	public partial class Atleta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Classe;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _CodiceFiscale;
		
		private string _Nazionalità;
		
		private string _RaggioGamba;
		
		private string _Età;
		
		private string _Altezza;
		
		private string _Peso;
		
		private string _NomeDarte;
		
		private string _CodiceCategoria;
		
		private string _CodiceTeam;
		
		private EntitySet<CaratteristicheAtletaInIncontro> _CaratteristicheAtletaInIncontros;
		
		private EntitySet<EntrataUscita> _EntrataUscitas;
		
		private EntitySet<ProgrammazioneIncontro> _ProgrammazioneIncontros;
		
		private EntitySet<ProgrammazioneIncontro> _ProgrammazioneIncontros1;
		
		private EntitySet<Record> _Records;
		
		private EntityRef<Categoria> _Categoria;
		
		private EntityRef<Team> _Team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClasseChanging(string value);
    partial void OnClasseChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnNazionalitàChanging(string value);
    partial void OnNazionalitàChanged();
    partial void OnRaggioGambaChanging(string value);
    partial void OnRaggioGambaChanged();
    partial void OnEtàChanging(string value);
    partial void OnEtàChanged();
    partial void OnAltezzaChanging(string value);
    partial void OnAltezzaChanged();
    partial void OnPesoChanging(string value);
    partial void OnPesoChanged();
    partial void OnNomeDarteChanging(string value);
    partial void OnNomeDarteChanged();
    partial void OnCodiceCategoriaChanging(string value);
    partial void OnCodiceCategoriaChanged();
    partial void OnCodiceTeamChanging(string value);
    partial void OnCodiceTeamChanged();
    #endregion
		
		public Atleta()
		{
			this._CaratteristicheAtletaInIncontros = new EntitySet<CaratteristicheAtletaInIncontro>(new Action<CaratteristicheAtletaInIncontro>(this.attach_CaratteristicheAtletaInIncontros), new Action<CaratteristicheAtletaInIncontro>(this.detach_CaratteristicheAtletaInIncontros));
			this._EntrataUscitas = new EntitySet<EntrataUscita>(new Action<EntrataUscita>(this.attach_EntrataUscitas), new Action<EntrataUscita>(this.detach_EntrataUscitas));
			this._ProgrammazioneIncontros = new EntitySet<ProgrammazioneIncontro>(new Action<ProgrammazioneIncontro>(this.attach_ProgrammazioneIncontros), new Action<ProgrammazioneIncontro>(this.detach_ProgrammazioneIncontros));
			this._ProgrammazioneIncontros1 = new EntitySet<ProgrammazioneIncontro>(new Action<ProgrammazioneIncontro>(this.attach_ProgrammazioneIncontros1), new Action<ProgrammazioneIncontro>(this.detach_ProgrammazioneIncontros1));
			this._Records = new EntitySet<Record>(new Action<Record>(this.attach_Records), new Action<Record>(this.detach_Records));
			this._Categoria = default(EntityRef<Categoria>);
			this._Team = default(EntityRef<Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classe", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Classe
		{
			get
			{
				return this._Classe;
			}
			set
			{
				if ((this._Classe != value))
				{
					this.OnClasseChanging(value);
					this.SendPropertyChanging();
					this._Classe = value;
					this.SendPropertyChanged("Classe");
					this.OnClasseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazionalità", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Nazionalità
		{
			get
			{
				return this._Nazionalità;
			}
			set
			{
				if ((this._Nazionalità != value))
				{
					this.OnNazionalitàChanging(value);
					this.SendPropertyChanging();
					this._Nazionalità = value;
					this.SendPropertyChanged("Nazionalità");
					this.OnNazionalitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RaggioGamba", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string RaggioGamba
		{
			get
			{
				return this._RaggioGamba;
			}
			set
			{
				if ((this._RaggioGamba != value))
				{
					this.OnRaggioGambaChanging(value);
					this.SendPropertyChanging();
					this._RaggioGamba = value;
					this.SendPropertyChanged("RaggioGamba");
					this.OnRaggioGambaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Età", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Età
		{
			get
			{
				return this._Età;
			}
			set
			{
				if ((this._Età != value))
				{
					this.OnEtàChanging(value);
					this.SendPropertyChanging();
					this._Età = value;
					this.SendPropertyChanged("Età");
					this.OnEtàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Altezza", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Altezza
		{
			get
			{
				return this._Altezza;
			}
			set
			{
				if ((this._Altezza != value))
				{
					this.OnAltezzaChanging(value);
					this.SendPropertyChanging();
					this._Altezza = value;
					this.SendPropertyChanged("Altezza");
					this.OnAltezzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peso", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Peso
		{
			get
			{
				return this._Peso;
			}
			set
			{
				if ((this._Peso != value))
				{
					this.OnPesoChanging(value);
					this.SendPropertyChanging();
					this._Peso = value;
					this.SendPropertyChanged("Peso");
					this.OnPesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeDarte", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string NomeDarte
		{
			get
			{
				return this._NomeDarte;
			}
			set
			{
				if ((this._NomeDarte != value))
				{
					this.OnNomeDarteChanging(value);
					this.SendPropertyChanging();
					this._NomeDarte = value;
					this.SendPropertyChanged("NomeDarte");
					this.OnNomeDarteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceCategoria", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string CodiceCategoria
		{
			get
			{
				return this._CodiceCategoria;
			}
			set
			{
				if ((this._CodiceCategoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceCategoriaChanging(value);
					this.SendPropertyChanging();
					this._CodiceCategoria = value;
					this.SendPropertyChanged("CodiceCategoria");
					this.OnCodiceCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceTeam", DbType="Char(50)")]
		public string CodiceTeam
		{
			get
			{
				return this._CodiceTeam;
			}
			set
			{
				if ((this._CodiceTeam != value))
				{
					if (this._Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceTeamChanging(value);
					this.SendPropertyChanging();
					this._CodiceTeam = value;
					this.SendPropertyChanged("CodiceTeam");
					this.OnCodiceTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Atleta_CaratteristicheAtletaInIncontro", Storage="_CaratteristicheAtletaInIncontros", ThisKey="CodiceFiscale", OtherKey="CodiceFiscaleAtleta")]
		public EntitySet<CaratteristicheAtletaInIncontro> CaratteristicheAtletaInIncontros
		{
			get
			{
				return this._CaratteristicheAtletaInIncontros;
			}
			set
			{
				this._CaratteristicheAtletaInIncontros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Atleta_EntrataUscita", Storage="_EntrataUscitas", ThisKey="CodiceFiscale", OtherKey="CodiceFiscaleAtleta")]
		public EntitySet<EntrataUscita> EntrataUscitas
		{
			get
			{
				return this._EntrataUscitas;
			}
			set
			{
				this._EntrataUscitas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Atleta_ProgrammazioneIncontro", Storage="_ProgrammazioneIncontros", ThisKey="CodiceFiscale", OtherKey="CodiceFiscaleAtleta1")]
		public EntitySet<ProgrammazioneIncontro> ProgrammazioneIncontros
		{
			get
			{
				return this._ProgrammazioneIncontros;
			}
			set
			{
				this._ProgrammazioneIncontros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Atleta_ProgrammazioneIncontro1", Storage="_ProgrammazioneIncontros1", ThisKey="CodiceFiscale", OtherKey="CodiceFiscaleAtleta2")]
		public EntitySet<ProgrammazioneIncontro> ProgrammazioneIncontros1
		{
			get
			{
				return this._ProgrammazioneIncontros1;
			}
			set
			{
				this._ProgrammazioneIncontros1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Atleta_Record", Storage="_Records", ThisKey="CodiceFiscale", OtherKey="CodiceFiscaleAtleta")]
		public EntitySet<Record> Records
		{
			get
			{
				return this._Records;
			}
			set
			{
				this._Records.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Atleta", Storage="_Categoria", ThisKey="CodiceCategoria", OtherKey="CodiceCategoria", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Atletas.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Atletas.Add(this);
						this._CodiceCategoria = value.CodiceCategoria;
					}
					else
					{
						this._CodiceCategoria = default(string);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Atleta", Storage="_Team", ThisKey="CodiceTeam", OtherKey="CodiceTeam", IsForeignKey=true)]
		public Team Team
		{
			get
			{
				return this._Team.Entity;
			}
			set
			{
				Team previousValue = this._Team.Entity;
				if (((previousValue != value) 
							|| (this._Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team.Entity = null;
						previousValue.Atletas.Remove(this);
					}
					this._Team.Entity = value;
					if ((value != null))
					{
						value.Atletas.Add(this);
						this._CodiceTeam = value.CodiceTeam;
					}
					else
					{
						this._CodiceTeam = default(string);
					}
					this.SendPropertyChanged("Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CaratteristicheAtletaInIncontros(CaratteristicheAtletaInIncontro entity)
		{
			this.SendPropertyChanging();
			entity.Atleta = this;
		}
		
		private void detach_CaratteristicheAtletaInIncontros(CaratteristicheAtletaInIncontro entity)
		{
			this.SendPropertyChanging();
			entity.Atleta = null;
		}
		
		private void attach_EntrataUscitas(EntrataUscita entity)
		{
			this.SendPropertyChanging();
			entity.Atleta = this;
		}
		
		private void detach_EntrataUscitas(EntrataUscita entity)
		{
			this.SendPropertyChanging();
			entity.Atleta = null;
		}
		
		private void attach_ProgrammazioneIncontros(ProgrammazioneIncontro entity)
		{
			this.SendPropertyChanging();
			entity.Atleta = this;
		}
		
		private void detach_ProgrammazioneIncontros(ProgrammazioneIncontro entity)
		{
			this.SendPropertyChanging();
			entity.Atleta = null;
		}
		
		private void attach_ProgrammazioneIncontros1(ProgrammazioneIncontro entity)
		{
			this.SendPropertyChanging();
			entity.Atleta1 = this;
		}
		
		private void detach_ProgrammazioneIncontros1(ProgrammazioneIncontro entity)
		{
			this.SendPropertyChanging();
			entity.Atleta1 = null;
		}
		
		private void attach_Records(Record entity)
		{
			this.SendPropertyChanging();
			entity.Atleta = this;
		}
		
		private void detach_Records(Record entity)
		{
			this.SendPropertyChanging();
			entity.Atleta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CaratteristicheAtletaInIncontro")]
	public partial class CaratteristicheAtletaInIncontro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodiceCaratteristicheIncontro;
		
		private string _CodiceFiscaleAtleta;
		
		private string _StatoAtleta;
		
		private string _Guantini_Misura;
		
		private string _Guantini_Marca;
		
		private EntityRef<Atleta> _Atleta;
		
		private EntityRef<CaratteristicheIncontro> _CaratteristicheIncontro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceCaratteristicheIncontroChanging(int value);
    partial void OnCodiceCaratteristicheIncontroChanged();
    partial void OnCodiceFiscaleAtletaChanging(string value);
    partial void OnCodiceFiscaleAtletaChanged();
    partial void OnStatoAtletaChanging(string value);
    partial void OnStatoAtletaChanged();
    partial void OnGuantini_MisuraChanging(string value);
    partial void OnGuantini_MisuraChanged();
    partial void OnGuantini_MarcaChanging(string value);
    partial void OnGuantini_MarcaChanged();
    #endregion
		
		public CaratteristicheAtletaInIncontro()
		{
			this._Atleta = default(EntityRef<Atleta>);
			this._CaratteristicheIncontro = default(EntityRef<CaratteristicheIncontro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceCaratteristicheIncontro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodiceCaratteristicheIncontro
		{
			get
			{
				return this._CodiceCaratteristicheIncontro;
			}
			set
			{
				if ((this._CodiceCaratteristicheIncontro != value))
				{
					if (this._CaratteristicheIncontro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceCaratteristicheIncontroChanging(value);
					this.SendPropertyChanging();
					this._CodiceCaratteristicheIncontro = value;
					this.SendPropertyChanged("CodiceCaratteristicheIncontro");
					this.OnCodiceCaratteristicheIncontroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscaleAtleta", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscaleAtleta
		{
			get
			{
				return this._CodiceFiscaleAtleta;
			}
			set
			{
				if ((this._CodiceFiscaleAtleta != value))
				{
					if (this._Atleta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleAtletaChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscaleAtleta = value;
					this.SendPropertyChanged("CodiceFiscaleAtleta");
					this.OnCodiceFiscaleAtletaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatoAtleta", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string StatoAtleta
		{
			get
			{
				return this._StatoAtleta;
			}
			set
			{
				if ((this._StatoAtleta != value))
				{
					this.OnStatoAtletaChanging(value);
					this.SendPropertyChanging();
					this._StatoAtleta = value;
					this.SendPropertyChanged("StatoAtleta");
					this.OnStatoAtletaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guantini_Misura", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Guantini_Misura
		{
			get
			{
				return this._Guantini_Misura;
			}
			set
			{
				if ((this._Guantini_Misura != value))
				{
					this.OnGuantini_MisuraChanging(value);
					this.SendPropertyChanging();
					this._Guantini_Misura = value;
					this.SendPropertyChanged("Guantini_Misura");
					this.OnGuantini_MisuraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guantini_Marca", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Guantini_Marca
		{
			get
			{
				return this._Guantini_Marca;
			}
			set
			{
				if ((this._Guantini_Marca != value))
				{
					this.OnGuantini_MarcaChanging(value);
					this.SendPropertyChanging();
					this._Guantini_Marca = value;
					this.SendPropertyChanged("Guantini_Marca");
					this.OnGuantini_MarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Atleta_CaratteristicheAtletaInIncontro", Storage="_Atleta", ThisKey="CodiceFiscaleAtleta", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public Atleta Atleta
		{
			get
			{
				return this._Atleta.Entity;
			}
			set
			{
				Atleta previousValue = this._Atleta.Entity;
				if (((previousValue != value) 
							|| (this._Atleta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Atleta.Entity = null;
						previousValue.CaratteristicheAtletaInIncontros.Remove(this);
					}
					this._Atleta.Entity = value;
					if ((value != null))
					{
						value.CaratteristicheAtletaInIncontros.Add(this);
						this._CodiceFiscaleAtleta = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscaleAtleta = default(string);
					}
					this.SendPropertyChanged("Atleta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CaratteristicheIncontro_CaratteristicheAtletaInIncontro", Storage="_CaratteristicheIncontro", ThisKey="CodiceCaratteristicheIncontro", OtherKey="CodiceCaratteristicheIncontro", IsForeignKey=true)]
		public CaratteristicheIncontro CaratteristicheIncontro
		{
			get
			{
				return this._CaratteristicheIncontro.Entity;
			}
			set
			{
				CaratteristicheIncontro previousValue = this._CaratteristicheIncontro.Entity;
				if (((previousValue != value) 
							|| (this._CaratteristicheIncontro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CaratteristicheIncontro.Entity = null;
						previousValue.CaratteristicheAtletaInIncontros.Remove(this);
					}
					this._CaratteristicheIncontro.Entity = value;
					if ((value != null))
					{
						value.CaratteristicheAtletaInIncontros.Add(this);
						this._CodiceCaratteristicheIncontro = value.CodiceCaratteristicheIncontro;
					}
					else
					{
						this._CodiceCaratteristicheIncontro = default(int);
					}
					this.SendPropertyChanged("CaratteristicheIncontro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CaratteristicheIncontro")]
	public partial class CaratteristicheIncontro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodiceCaratteristicheIncontro;
		
		private string _CodiceFiscaleAtleta2;
		
		private string _CodiceFiscaleAtleta1;
		
		private System.DateTime _Data;
		
		private string _Descrizione;
		
		private string _Pareggio;
		
		private string _Sconfitto;
		
		private string _Vincitore;
		
		private string _CodiceFiscaleArbitro;
		
		private EntitySet<CaratteristicheAtletaInIncontro> _CaratteristicheAtletaInIncontros;
		
		private EntitySet<Giudica> _Giudicas;
		
		private EntitySet<Medicazione> _Medicaziones;
		
		private EntitySet<SponsorizzazioneIncontro> _SponsorizzazioneIncontros;
		
		private EntityRef<Arbitro> _Arbitro;
		
		private EntityRef<ProgrammazioneIncontro> _ProgrammazioneIncontro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceCaratteristicheIncontroChanging(int value);
    partial void OnCodiceCaratteristicheIncontroChanged();
    partial void OnCodiceFiscaleAtleta2Changing(string value);
    partial void OnCodiceFiscaleAtleta2Changed();
    partial void OnCodiceFiscaleAtleta1Changing(string value);
    partial void OnCodiceFiscaleAtleta1Changed();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnPareggioChanging(string value);
    partial void OnPareggioChanged();
    partial void OnSconfittoChanging(string value);
    partial void OnSconfittoChanged();
    partial void OnVincitoreChanging(string value);
    partial void OnVincitoreChanged();
    partial void OnCodiceFiscaleArbitroChanging(string value);
    partial void OnCodiceFiscaleArbitroChanged();
    #endregion
		
		public CaratteristicheIncontro()
		{
			this._CaratteristicheAtletaInIncontros = new EntitySet<CaratteristicheAtletaInIncontro>(new Action<CaratteristicheAtletaInIncontro>(this.attach_CaratteristicheAtletaInIncontros), new Action<CaratteristicheAtletaInIncontro>(this.detach_CaratteristicheAtletaInIncontros));
			this._Giudicas = new EntitySet<Giudica>(new Action<Giudica>(this.attach_Giudicas), new Action<Giudica>(this.detach_Giudicas));
			this._Medicaziones = new EntitySet<Medicazione>(new Action<Medicazione>(this.attach_Medicaziones), new Action<Medicazione>(this.detach_Medicaziones));
			this._SponsorizzazioneIncontros = new EntitySet<SponsorizzazioneIncontro>(new Action<SponsorizzazioneIncontro>(this.attach_SponsorizzazioneIncontros), new Action<SponsorizzazioneIncontro>(this.detach_SponsorizzazioneIncontros));
			this._Arbitro = default(EntityRef<Arbitro>);
			this._ProgrammazioneIncontro = default(EntityRef<ProgrammazioneIncontro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceCaratteristicheIncontro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodiceCaratteristicheIncontro
		{
			get
			{
				return this._CodiceCaratteristicheIncontro;
			}
			set
			{
				if ((this._CodiceCaratteristicheIncontro != value))
				{
					this.OnCodiceCaratteristicheIncontroChanging(value);
					this.SendPropertyChanging();
					this._CodiceCaratteristicheIncontro = value;
					this.SendPropertyChanged("CodiceCaratteristicheIncontro");
					this.OnCodiceCaratteristicheIncontroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscaleAtleta2", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string CodiceFiscaleAtleta2
		{
			get
			{
				return this._CodiceFiscaleAtleta2;
			}
			set
			{
				if ((this._CodiceFiscaleAtleta2 != value))
				{
					if (this._ProgrammazioneIncontro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleAtleta2Changing(value);
					this.SendPropertyChanging();
					this._CodiceFiscaleAtleta2 = value;
					this.SendPropertyChanged("CodiceFiscaleAtleta2");
					this.OnCodiceFiscaleAtleta2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscaleAtleta1", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string CodiceFiscaleAtleta1
		{
			get
			{
				return this._CodiceFiscaleAtleta1;
			}
			set
			{
				if ((this._CodiceFiscaleAtleta1 != value))
				{
					if (this._ProgrammazioneIncontro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleAtleta1Changing(value);
					this.SendPropertyChanging();
					this._CodiceFiscaleAtleta1 = value;
					this.SendPropertyChanged("CodiceFiscaleAtleta1");
					this.OnCodiceFiscaleAtleta1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					if (this._ProgrammazioneIncontro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pareggio", DbType="Char(50)")]
		public string Pareggio
		{
			get
			{
				return this._Pareggio;
			}
			set
			{
				if ((this._Pareggio != value))
				{
					this.OnPareggioChanging(value);
					this.SendPropertyChanging();
					this._Pareggio = value;
					this.SendPropertyChanged("Pareggio");
					this.OnPareggioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sconfitto", DbType="Char(50)")]
		public string Sconfitto
		{
			get
			{
				return this._Sconfitto;
			}
			set
			{
				if ((this._Sconfitto != value))
				{
					this.OnSconfittoChanging(value);
					this.SendPropertyChanging();
					this._Sconfitto = value;
					this.SendPropertyChanged("Sconfitto");
					this.OnSconfittoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vincitore", DbType="Char(50)")]
		public string Vincitore
		{
			get
			{
				return this._Vincitore;
			}
			set
			{
				if ((this._Vincitore != value))
				{
					this.OnVincitoreChanging(value);
					this.SendPropertyChanging();
					this._Vincitore = value;
					this.SendPropertyChanged("Vincitore");
					this.OnVincitoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscaleArbitro", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string CodiceFiscaleArbitro
		{
			get
			{
				return this._CodiceFiscaleArbitro;
			}
			set
			{
				if ((this._CodiceFiscaleArbitro != value))
				{
					if (this._Arbitro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleArbitroChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscaleArbitro = value;
					this.SendPropertyChanged("CodiceFiscaleArbitro");
					this.OnCodiceFiscaleArbitroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CaratteristicheIncontro_CaratteristicheAtletaInIncontro", Storage="_CaratteristicheAtletaInIncontros", ThisKey="CodiceCaratteristicheIncontro", OtherKey="CodiceCaratteristicheIncontro")]
		public EntitySet<CaratteristicheAtletaInIncontro> CaratteristicheAtletaInIncontros
		{
			get
			{
				return this._CaratteristicheAtletaInIncontros;
			}
			set
			{
				this._CaratteristicheAtletaInIncontros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CaratteristicheIncontro_Giudica", Storage="_Giudicas", ThisKey="CodiceCaratteristicheIncontro", OtherKey="CodiceCaratteristicheIncontro")]
		public EntitySet<Giudica> Giudicas
		{
			get
			{
				return this._Giudicas;
			}
			set
			{
				this._Giudicas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CaratteristicheIncontro_Medicazione", Storage="_Medicaziones", ThisKey="CodiceCaratteristicheIncontro", OtherKey="CodiceCaratteristicheIncontro")]
		public EntitySet<Medicazione> Medicaziones
		{
			get
			{
				return this._Medicaziones;
			}
			set
			{
				this._Medicaziones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CaratteristicheIncontro_SponsorizzazioneIncontro", Storage="_SponsorizzazioneIncontros", ThisKey="CodiceCaratteristicheIncontro", OtherKey="CodiceCaratteristicheIncontro")]
		public EntitySet<SponsorizzazioneIncontro> SponsorizzazioneIncontros
		{
			get
			{
				return this._SponsorizzazioneIncontros;
			}
			set
			{
				this._SponsorizzazioneIncontros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arbitro_CaratteristicheIncontro", Storage="_Arbitro", ThisKey="CodiceFiscaleArbitro", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public Arbitro Arbitro
		{
			get
			{
				return this._Arbitro.Entity;
			}
			set
			{
				Arbitro previousValue = this._Arbitro.Entity;
				if (((previousValue != value) 
							|| (this._Arbitro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Arbitro.Entity = null;
						previousValue.CaratteristicheIncontros.Remove(this);
					}
					this._Arbitro.Entity = value;
					if ((value != null))
					{
						value.CaratteristicheIncontros.Add(this);
						this._CodiceFiscaleArbitro = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscaleArbitro = default(string);
					}
					this.SendPropertyChanged("Arbitro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgrammazioneIncontro_CaratteristicheIncontro", Storage="_ProgrammazioneIncontro", ThisKey="CodiceFiscaleAtleta2,CodiceFiscaleAtleta1,Data", OtherKey="CodiceFiscaleAtleta2,CodiceFiscaleAtleta1,Data", IsForeignKey=true)]
		public ProgrammazioneIncontro ProgrammazioneIncontro
		{
			get
			{
				return this._ProgrammazioneIncontro.Entity;
			}
			set
			{
				ProgrammazioneIncontro previousValue = this._ProgrammazioneIncontro.Entity;
				if (((previousValue != value) 
							|| (this._ProgrammazioneIncontro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgrammazioneIncontro.Entity = null;
						previousValue.CaratteristicheIncontros.Remove(this);
					}
					this._ProgrammazioneIncontro.Entity = value;
					if ((value != null))
					{
						value.CaratteristicheIncontros.Add(this);
						this._CodiceFiscaleAtleta2 = value.CodiceFiscaleAtleta2;
						this._CodiceFiscaleAtleta1 = value.CodiceFiscaleAtleta1;
						this._Data = value.Data;
					}
					else
					{
						this._CodiceFiscaleAtleta2 = default(string);
						this._CodiceFiscaleAtleta1 = default(string);
						this._Data = default(System.DateTime);
					}
					this.SendPropertyChanged("ProgrammazioneIncontro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CaratteristicheAtletaInIncontros(CaratteristicheAtletaInIncontro entity)
		{
			this.SendPropertyChanging();
			entity.CaratteristicheIncontro = this;
		}
		
		private void detach_CaratteristicheAtletaInIncontros(CaratteristicheAtletaInIncontro entity)
		{
			this.SendPropertyChanging();
			entity.CaratteristicheIncontro = null;
		}
		
		private void attach_Giudicas(Giudica entity)
		{
			this.SendPropertyChanging();
			entity.CaratteristicheIncontro = this;
		}
		
		private void detach_Giudicas(Giudica entity)
		{
			this.SendPropertyChanging();
			entity.CaratteristicheIncontro = null;
		}
		
		private void attach_Medicaziones(Medicazione entity)
		{
			this.SendPropertyChanging();
			entity.CaratteristicheIncontro = this;
		}
		
		private void detach_Medicaziones(Medicazione entity)
		{
			this.SendPropertyChanging();
			entity.CaratteristicheIncontro = null;
		}
		
		private void attach_SponsorizzazioneIncontros(SponsorizzazioneIncontro entity)
		{
			this.SendPropertyChanging();
			entity.CaratteristicheIncontro = this;
		}
		
		private void detach_SponsorizzazioneIncontros(SponsorizzazioneIncontro entity)
		{
			this.SendPropertyChanging();
			entity.CaratteristicheIncontro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceCategoria;
		
		private string _NomeCategoria;
		
		private string _Descrizione;
		
		private EntitySet<Atleta> _Atletas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceCategoriaChanging(string value);
    partial void OnCodiceCategoriaChanged();
    partial void OnNomeCategoriaChanging(string value);
    partial void OnNomeCategoriaChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public Categoria()
		{
			this._Atletas = new EntitySet<Atleta>(new Action<Atleta>(this.attach_Atletas), new Action<Atleta>(this.detach_Atletas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceCategoria", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceCategoria
		{
			get
			{
				return this._CodiceCategoria;
			}
			set
			{
				if ((this._CodiceCategoria != value))
				{
					this.OnCodiceCategoriaChanging(value);
					this.SendPropertyChanging();
					this._CodiceCategoria = value;
					this.SendPropertyChanged("CodiceCategoria");
					this.OnCodiceCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeCategoria", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string NomeCategoria
		{
			get
			{
				return this._NomeCategoria;
			}
			set
			{
				if ((this._NomeCategoria != value))
				{
					this.OnNomeCategoriaChanging(value);
					this.SendPropertyChanging();
					this._NomeCategoria = value;
					this.SendPropertyChanged("NomeCategoria");
					this.OnNomeCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Atleta", Storage="_Atletas", ThisKey="CodiceCategoria", OtherKey="CodiceCategoria")]
		public EntitySet<Atleta> Atletas
		{
			get
			{
				return this._Atletas;
			}
			set
			{
				this._Atletas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Atletas(Atleta entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Atletas(Atleta entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrataUscita")]
	public partial class EntrataUscita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceTeam;
		
		private string _CodiceFiscaleAtleta;
		
		private string _EntrataUscita1;
		
		private System.DateTime _Data;
		
		private EntityRef<Atleta> _Atleta;
		
		private EntityRef<Team> _Team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceTeamChanging(string value);
    partial void OnCodiceTeamChanged();
    partial void OnCodiceFiscaleAtletaChanging(string value);
    partial void OnCodiceFiscaleAtletaChanged();
    partial void OnEntrataUscita1Changing(string value);
    partial void OnEntrataUscita1Changed();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    #endregion
		
		public EntrataUscita()
		{
			this._Atleta = default(EntityRef<Atleta>);
			this._Team = default(EntityRef<Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceTeam", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceTeam
		{
			get
			{
				return this._CodiceTeam;
			}
			set
			{
				if ((this._CodiceTeam != value))
				{
					if (this._Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceTeamChanging(value);
					this.SendPropertyChanging();
					this._CodiceTeam = value;
					this.SendPropertyChanged("CodiceTeam");
					this.OnCodiceTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscaleAtleta", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscaleAtleta
		{
			get
			{
				return this._CodiceFiscaleAtleta;
			}
			set
			{
				if ((this._CodiceFiscaleAtleta != value))
				{
					if (this._Atleta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleAtletaChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscaleAtleta = value;
					this.SendPropertyChanged("CodiceFiscaleAtleta");
					this.OnCodiceFiscaleAtletaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EntrataUscita", Storage="_EntrataUscita1", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string EntrataUscita1
		{
			get
			{
				return this._EntrataUscita1;
			}
			set
			{
				if ((this._EntrataUscita1 != value))
				{
					this.OnEntrataUscita1Changing(value);
					this.SendPropertyChanging();
					this._EntrataUscita1 = value;
					this.SendPropertyChanged("EntrataUscita1");
					this.OnEntrataUscita1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Atleta_EntrataUscita", Storage="_Atleta", ThisKey="CodiceFiscaleAtleta", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public Atleta Atleta
		{
			get
			{
				return this._Atleta.Entity;
			}
			set
			{
				Atleta previousValue = this._Atleta.Entity;
				if (((previousValue != value) 
							|| (this._Atleta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Atleta.Entity = null;
						previousValue.EntrataUscitas.Remove(this);
					}
					this._Atleta.Entity = value;
					if ((value != null))
					{
						value.EntrataUscitas.Add(this);
						this._CodiceFiscaleAtleta = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscaleAtleta = default(string);
					}
					this.SendPropertyChanged("Atleta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_EntrataUscita", Storage="_Team", ThisKey="CodiceTeam", OtherKey="CodiceTeam", IsForeignKey=true)]
		public Team Team
		{
			get
			{
				return this._Team.Entity;
			}
			set
			{
				Team previousValue = this._Team.Entity;
				if (((previousValue != value) 
							|| (this._Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team.Entity = null;
						previousValue.EntrataUscitas.Remove(this);
					}
					this._Team.Entity = value;
					if ((value != null))
					{
						value.EntrataUscitas.Add(this);
						this._CodiceTeam = value.CodiceTeam;
					}
					else
					{
						this._CodiceTeam = default(string);
					}
					this.SendPropertyChanged("Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fisioterapista")]
	public partial class Fisioterapista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Telefono;
		
		private string _CodiceFiscale;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _Specializzazione;
		
		private string _OspedaleProvenienza;
		
		private string _CodiceTeam;
		
		private EntityRef<Team> _Team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnSpecializzazioneChanging(string value);
    partial void OnSpecializzazioneChanged();
    partial void OnOspedaleProvenienzaChanging(string value);
    partial void OnOspedaleProvenienzaChanged();
    partial void OnCodiceTeamChanging(string value);
    partial void OnCodiceTeamChanged();
    #endregion
		
		public Fisioterapista()
		{
			this._Team = default(EntityRef<Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Char(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specializzazione", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Specializzazione
		{
			get
			{
				return this._Specializzazione;
			}
			set
			{
				if ((this._Specializzazione != value))
				{
					this.OnSpecializzazioneChanging(value);
					this.SendPropertyChanging();
					this._Specializzazione = value;
					this.SendPropertyChanged("Specializzazione");
					this.OnSpecializzazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OspedaleProvenienza", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string OspedaleProvenienza
		{
			get
			{
				return this._OspedaleProvenienza;
			}
			set
			{
				if ((this._OspedaleProvenienza != value))
				{
					this.OnOspedaleProvenienzaChanging(value);
					this.SendPropertyChanging();
					this._OspedaleProvenienza = value;
					this.SendPropertyChanged("OspedaleProvenienza");
					this.OnOspedaleProvenienzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceTeam", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string CodiceTeam
		{
			get
			{
				return this._CodiceTeam;
			}
			set
			{
				if ((this._CodiceTeam != value))
				{
					if (this._Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceTeamChanging(value);
					this.SendPropertyChanging();
					this._CodiceTeam = value;
					this.SendPropertyChanged("CodiceTeam");
					this.OnCodiceTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Fisioterapista", Storage="_Team", ThisKey="CodiceTeam", OtherKey="CodiceTeam", IsForeignKey=true)]
		public Team Team
		{
			get
			{
				return this._Team.Entity;
			}
			set
			{
				Team previousValue = this._Team.Entity;
				if (((previousValue != value) 
							|| (this._Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team.Entity = null;
						previousValue.Fisioterapistas.Remove(this);
					}
					this._Team.Entity = value;
					if ((value != null))
					{
						value.Fisioterapistas.Add(this);
						this._CodiceTeam = value.CodiceTeam;
					}
					else
					{
						this._CodiceTeam = default(string);
					}
					this.SendPropertyChanged("Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Giudica")]
	public partial class Giudica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceFiscaleGiudice;
		
		private int _CodiceCaratteristicheIncontro;
		
		private EntityRef<CaratteristicheIncontro> _CaratteristicheIncontro;
		
		private EntityRef<Giudice> _Giudice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceFiscaleGiudiceChanging(string value);
    partial void OnCodiceFiscaleGiudiceChanged();
    partial void OnCodiceCaratteristicheIncontroChanging(int value);
    partial void OnCodiceCaratteristicheIncontroChanged();
    #endregion
		
		public Giudica()
		{
			this._CaratteristicheIncontro = default(EntityRef<CaratteristicheIncontro>);
			this._Giudice = default(EntityRef<Giudice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscaleGiudice", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscaleGiudice
		{
			get
			{
				return this._CodiceFiscaleGiudice;
			}
			set
			{
				if ((this._CodiceFiscaleGiudice != value))
				{
					if (this._Giudice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleGiudiceChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscaleGiudice = value;
					this.SendPropertyChanged("CodiceFiscaleGiudice");
					this.OnCodiceFiscaleGiudiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceCaratteristicheIncontro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodiceCaratteristicheIncontro
		{
			get
			{
				return this._CodiceCaratteristicheIncontro;
			}
			set
			{
				if ((this._CodiceCaratteristicheIncontro != value))
				{
					if (this._CaratteristicheIncontro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceCaratteristicheIncontroChanging(value);
					this.SendPropertyChanging();
					this._CodiceCaratteristicheIncontro = value;
					this.SendPropertyChanged("CodiceCaratteristicheIncontro");
					this.OnCodiceCaratteristicheIncontroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CaratteristicheIncontro_Giudica", Storage="_CaratteristicheIncontro", ThisKey="CodiceCaratteristicheIncontro", OtherKey="CodiceCaratteristicheIncontro", IsForeignKey=true)]
		public CaratteristicheIncontro CaratteristicheIncontro
		{
			get
			{
				return this._CaratteristicheIncontro.Entity;
			}
			set
			{
				CaratteristicheIncontro previousValue = this._CaratteristicheIncontro.Entity;
				if (((previousValue != value) 
							|| (this._CaratteristicheIncontro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CaratteristicheIncontro.Entity = null;
						previousValue.Giudicas.Remove(this);
					}
					this._CaratteristicheIncontro.Entity = value;
					if ((value != null))
					{
						value.Giudicas.Add(this);
						this._CodiceCaratteristicheIncontro = value.CodiceCaratteristicheIncontro;
					}
					else
					{
						this._CodiceCaratteristicheIncontro = default(int);
					}
					this.SendPropertyChanged("CaratteristicheIncontro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Giudice_Giudica", Storage="_Giudice", ThisKey="CodiceFiscaleGiudice", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public Giudice Giudice
		{
			get
			{
				return this._Giudice.Entity;
			}
			set
			{
				Giudice previousValue = this._Giudice.Entity;
				if (((previousValue != value) 
							|| (this._Giudice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Giudice.Entity = null;
						previousValue.Giudicas.Remove(this);
					}
					this._Giudice.Entity = value;
					if ((value != null))
					{
						value.Giudicas.Add(this);
						this._CodiceFiscaleGiudice = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscaleGiudice = default(string);
					}
					this.SendPropertyChanged("Giudice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Giudice")]
	public partial class Giudice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Telefono;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _CodiceFiscale;
		
		private string _CodiceCartellinoGiudice;
		
		private string _NumeroIncotriGiudicati;
		
		private EntitySet<Giudica> _Giudicas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnCodiceCartellinoGiudiceChanging(string value);
    partial void OnCodiceCartellinoGiudiceChanged();
    partial void OnNumeroIncotriGiudicatiChanging(string value);
    partial void OnNumeroIncotriGiudicatiChanged();
    #endregion
		
		public Giudice()
		{
			this._Giudicas = new EntitySet<Giudica>(new Action<Giudica>(this.attach_Giudicas), new Action<Giudica>(this.detach_Giudicas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Char(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceCartellinoGiudice", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string CodiceCartellinoGiudice
		{
			get
			{
				return this._CodiceCartellinoGiudice;
			}
			set
			{
				if ((this._CodiceCartellinoGiudice != value))
				{
					this.OnCodiceCartellinoGiudiceChanging(value);
					this.SendPropertyChanging();
					this._CodiceCartellinoGiudice = value;
					this.SendPropertyChanged("CodiceCartellinoGiudice");
					this.OnCodiceCartellinoGiudiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroIncotriGiudicati", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string NumeroIncotriGiudicati
		{
			get
			{
				return this._NumeroIncotriGiudicati;
			}
			set
			{
				if ((this._NumeroIncotriGiudicati != value))
				{
					this.OnNumeroIncotriGiudicatiChanging(value);
					this.SendPropertyChanging();
					this._NumeroIncotriGiudicati = value;
					this.SendPropertyChanged("NumeroIncotriGiudicati");
					this.OnNumeroIncotriGiudicatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Giudice_Giudica", Storage="_Giudicas", ThisKey="CodiceFiscale", OtherKey="CodiceFiscaleGiudice")]
		public EntitySet<Giudica> Giudicas
		{
			get
			{
				return this._Giudicas;
			}
			set
			{
				this._Giudicas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Giudicas(Giudica entity)
		{
			this.SendPropertyChanging();
			entity.Giudice = this;
		}
		
		private void detach_Giudicas(Giudica entity)
		{
			this.SendPropertyChanging();
			entity.Giudice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medicazione")]
	public partial class Medicazione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceFiscaleMedico;
		
		private int _CodiceCaratteristicheIncontro;
		
		private EntityRef<CaratteristicheIncontro> _CaratteristicheIncontro;
		
		private EntityRef<Medico> _Medico;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceFiscaleMedicoChanging(string value);
    partial void OnCodiceFiscaleMedicoChanged();
    partial void OnCodiceCaratteristicheIncontroChanging(int value);
    partial void OnCodiceCaratteristicheIncontroChanged();
    #endregion
		
		public Medicazione()
		{
			this._CaratteristicheIncontro = default(EntityRef<CaratteristicheIncontro>);
			this._Medico = default(EntityRef<Medico>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscaleMedico", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscaleMedico
		{
			get
			{
				return this._CodiceFiscaleMedico;
			}
			set
			{
				if ((this._CodiceFiscaleMedico != value))
				{
					if (this._Medico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleMedicoChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscaleMedico = value;
					this.SendPropertyChanged("CodiceFiscaleMedico");
					this.OnCodiceFiscaleMedicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceCaratteristicheIncontro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodiceCaratteristicheIncontro
		{
			get
			{
				return this._CodiceCaratteristicheIncontro;
			}
			set
			{
				if ((this._CodiceCaratteristicheIncontro != value))
				{
					if (this._CaratteristicheIncontro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceCaratteristicheIncontroChanging(value);
					this.SendPropertyChanging();
					this._CodiceCaratteristicheIncontro = value;
					this.SendPropertyChanged("CodiceCaratteristicheIncontro");
					this.OnCodiceCaratteristicheIncontroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CaratteristicheIncontro_Medicazione", Storage="_CaratteristicheIncontro", ThisKey="CodiceCaratteristicheIncontro", OtherKey="CodiceCaratteristicheIncontro", IsForeignKey=true)]
		public CaratteristicheIncontro CaratteristicheIncontro
		{
			get
			{
				return this._CaratteristicheIncontro.Entity;
			}
			set
			{
				CaratteristicheIncontro previousValue = this._CaratteristicheIncontro.Entity;
				if (((previousValue != value) 
							|| (this._CaratteristicheIncontro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CaratteristicheIncontro.Entity = null;
						previousValue.Medicaziones.Remove(this);
					}
					this._CaratteristicheIncontro.Entity = value;
					if ((value != null))
					{
						value.Medicaziones.Add(this);
						this._CodiceCaratteristicheIncontro = value.CodiceCaratteristicheIncontro;
					}
					else
					{
						this._CodiceCaratteristicheIncontro = default(int);
					}
					this.SendPropertyChanged("CaratteristicheIncontro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medico_Medicazione", Storage="_Medico", ThisKey="CodiceFiscaleMedico", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public Medico Medico
		{
			get
			{
				return this._Medico.Entity;
			}
			set
			{
				Medico previousValue = this._Medico.Entity;
				if (((previousValue != value) 
							|| (this._Medico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Medico.Entity = null;
						previousValue.Medicaziones.Remove(this);
					}
					this._Medico.Entity = value;
					if ((value != null))
					{
						value.Medicaziones.Add(this);
						this._CodiceFiscaleMedico = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscaleMedico = default(string);
					}
					this.SendPropertyChanged("Medico");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medico")]
	public partial class Medico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Telefono;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _CodiceFiscale;
		
		private string _OspedaleProvenienza;
		
		private string _Specilizzazione;
		
		private EntitySet<Medicazione> _Medicaziones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnOspedaleProvenienzaChanging(string value);
    partial void OnOspedaleProvenienzaChanged();
    partial void OnSpecilizzazioneChanging(string value);
    partial void OnSpecilizzazioneChanged();
    #endregion
		
		public Medico()
		{
			this._Medicaziones = new EntitySet<Medicazione>(new Action<Medicazione>(this.attach_Medicaziones), new Action<Medicazione>(this.detach_Medicaziones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Char(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OspedaleProvenienza", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string OspedaleProvenienza
		{
			get
			{
				return this._OspedaleProvenienza;
			}
			set
			{
				if ((this._OspedaleProvenienza != value))
				{
					this.OnOspedaleProvenienzaChanging(value);
					this.SendPropertyChanging();
					this._OspedaleProvenienza = value;
					this.SendPropertyChanged("OspedaleProvenienza");
					this.OnOspedaleProvenienzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specilizzazione", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Specilizzazione
		{
			get
			{
				return this._Specilizzazione;
			}
			set
			{
				if ((this._Specilizzazione != value))
				{
					this.OnSpecilizzazioneChanging(value);
					this.SendPropertyChanging();
					this._Specilizzazione = value;
					this.SendPropertyChanged("Specilizzazione");
					this.OnSpecilizzazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medico_Medicazione", Storage="_Medicaziones", ThisKey="CodiceFiscale", OtherKey="CodiceFiscaleMedico")]
		public EntitySet<Medicazione> Medicaziones
		{
			get
			{
				return this._Medicaziones;
			}
			set
			{
				this._Medicaziones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Medicaziones(Medicazione entity)
		{
			this.SendPropertyChanging();
			entity.Medico = this;
		}
		
		private void detach_Medicaziones(Medicazione entity)
		{
			this.SendPropertyChanging();
			entity.Medico = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pisicologo")]
	public partial class Pisicologo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Telefono;
		
		private string _Specializzazione;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _CodiceFiscale;
		
		private string _CodiceTeam;
		
		private EntityRef<Team> _Team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnSpecializzazioneChanging(string value);
    partial void OnSpecializzazioneChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnCodiceTeamChanging(string value);
    partial void OnCodiceTeamChanged();
    #endregion
		
		public Pisicologo()
		{
			this._Team = default(EntityRef<Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Char(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specializzazione", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Specializzazione
		{
			get
			{
				return this._Specializzazione;
			}
			set
			{
				if ((this._Specializzazione != value))
				{
					this.OnSpecializzazioneChanging(value);
					this.SendPropertyChanging();
					this._Specializzazione = value;
					this.SendPropertyChanged("Specializzazione");
					this.OnSpecializzazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceTeam", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string CodiceTeam
		{
			get
			{
				return this._CodiceTeam;
			}
			set
			{
				if ((this._CodiceTeam != value))
				{
					if (this._Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceTeamChanging(value);
					this.SendPropertyChanging();
					this._CodiceTeam = value;
					this.SendPropertyChanged("CodiceTeam");
					this.OnCodiceTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Pisicologo", Storage="_Team", ThisKey="CodiceTeam", OtherKey="CodiceTeam", IsForeignKey=true)]
		public Team Team
		{
			get
			{
				return this._Team.Entity;
			}
			set
			{
				Team previousValue = this._Team.Entity;
				if (((previousValue != value) 
							|| (this._Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team.Entity = null;
						previousValue.Pisicologos.Remove(this);
					}
					this._Team.Entity = value;
					if ((value != null))
					{
						value.Pisicologos.Add(this);
						this._CodiceTeam = value.CodiceTeam;
					}
					else
					{
						this._CodiceTeam = default(string);
					}
					this.SendPropertyChanged("Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgrammazioneIncontro")]
	public partial class ProgrammazioneIncontro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceFiscaleAtleta2;
		
		private string _CodiceFiscaleAtleta1;
		
		private string _CaratteristicheRound_NumeroRound;
		
		private string _CaratteristicheRound_MinutiPerRound;
		
		private System.DateTime _Data;
		
		private string _OraInizio;
		
		private string _Città;
		
		private string _Stato;
		
		private string _CostoIngresso;
		
		private EntitySet<CaratteristicheIncontro> _CaratteristicheIncontros;
		
		private EntityRef<Atleta> _Atleta;
		
		private EntityRef<Atleta> _Atleta1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceFiscaleAtleta2Changing(string value);
    partial void OnCodiceFiscaleAtleta2Changed();
    partial void OnCodiceFiscaleAtleta1Changing(string value);
    partial void OnCodiceFiscaleAtleta1Changed();
    partial void OnCaratteristicheRound_NumeroRoundChanging(string value);
    partial void OnCaratteristicheRound_NumeroRoundChanged();
    partial void OnCaratteristicheRound_MinutiPerRoundChanging(string value);
    partial void OnCaratteristicheRound_MinutiPerRoundChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnOraInizioChanging(string value);
    partial void OnOraInizioChanged();
    partial void OnCittàChanging(string value);
    partial void OnCittàChanged();
    partial void OnStatoChanging(string value);
    partial void OnStatoChanged();
    partial void OnCostoIngressoChanging(string value);
    partial void OnCostoIngressoChanged();
    #endregion
		
		public ProgrammazioneIncontro()
		{
			this._CaratteristicheIncontros = new EntitySet<CaratteristicheIncontro>(new Action<CaratteristicheIncontro>(this.attach_CaratteristicheIncontros), new Action<CaratteristicheIncontro>(this.detach_CaratteristicheIncontros));
			this._Atleta = default(EntityRef<Atleta>);
			this._Atleta1 = default(EntityRef<Atleta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscaleAtleta2", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscaleAtleta2
		{
			get
			{
				return this._CodiceFiscaleAtleta2;
			}
			set
			{
				if ((this._CodiceFiscaleAtleta2 != value))
				{
					if (this._Atleta1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleAtleta2Changing(value);
					this.SendPropertyChanging();
					this._CodiceFiscaleAtleta2 = value;
					this.SendPropertyChanged("CodiceFiscaleAtleta2");
					this.OnCodiceFiscaleAtleta2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscaleAtleta1", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscaleAtleta1
		{
			get
			{
				return this._CodiceFiscaleAtleta1;
			}
			set
			{
				if ((this._CodiceFiscaleAtleta1 != value))
				{
					if (this._Atleta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleAtleta1Changing(value);
					this.SendPropertyChanging();
					this._CodiceFiscaleAtleta1 = value;
					this.SendPropertyChanged("CodiceFiscaleAtleta1");
					this.OnCodiceFiscaleAtleta1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaratteristicheRound_NumeroRound", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string CaratteristicheRound_NumeroRound
		{
			get
			{
				return this._CaratteristicheRound_NumeroRound;
			}
			set
			{
				if ((this._CaratteristicheRound_NumeroRound != value))
				{
					this.OnCaratteristicheRound_NumeroRoundChanging(value);
					this.SendPropertyChanging();
					this._CaratteristicheRound_NumeroRound = value;
					this.SendPropertyChanged("CaratteristicheRound_NumeroRound");
					this.OnCaratteristicheRound_NumeroRoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaratteristicheRound_MinutiPerRound", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string CaratteristicheRound_MinutiPerRound
		{
			get
			{
				return this._CaratteristicheRound_MinutiPerRound;
			}
			set
			{
				if ((this._CaratteristicheRound_MinutiPerRound != value))
				{
					this.OnCaratteristicheRound_MinutiPerRoundChanging(value);
					this.SendPropertyChanging();
					this._CaratteristicheRound_MinutiPerRound = value;
					this.SendPropertyChanged("CaratteristicheRound_MinutiPerRound");
					this.OnCaratteristicheRound_MinutiPerRoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraInizio", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string OraInizio
		{
			get
			{
				return this._OraInizio;
			}
			set
			{
				if ((this._OraInizio != value))
				{
					this.OnOraInizioChanging(value);
					this.SendPropertyChanging();
					this._OraInizio = value;
					this.SendPropertyChanged("OraInizio");
					this.OnOraInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Città", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Città
		{
			get
			{
				return this._Città;
			}
			set
			{
				if ((this._Città != value))
				{
					this.OnCittàChanging(value);
					this.SendPropertyChanging();
					this._Città = value;
					this.SendPropertyChanged("Città");
					this.OnCittàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stato", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Stato
		{
			get
			{
				return this._Stato;
			}
			set
			{
				if ((this._Stato != value))
				{
					this.OnStatoChanging(value);
					this.SendPropertyChanging();
					this._Stato = value;
					this.SendPropertyChanged("Stato");
					this.OnStatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostoIngresso", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string CostoIngresso
		{
			get
			{
				return this._CostoIngresso;
			}
			set
			{
				if ((this._CostoIngresso != value))
				{
					this.OnCostoIngressoChanging(value);
					this.SendPropertyChanging();
					this._CostoIngresso = value;
					this.SendPropertyChanged("CostoIngresso");
					this.OnCostoIngressoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgrammazioneIncontro_CaratteristicheIncontro", Storage="_CaratteristicheIncontros", ThisKey="CodiceFiscaleAtleta2,CodiceFiscaleAtleta1,Data", OtherKey="CodiceFiscaleAtleta2,CodiceFiscaleAtleta1,Data")]
		public EntitySet<CaratteristicheIncontro> CaratteristicheIncontros
		{
			get
			{
				return this._CaratteristicheIncontros;
			}
			set
			{
				this._CaratteristicheIncontros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Atleta_ProgrammazioneIncontro", Storage="_Atleta", ThisKey="CodiceFiscaleAtleta1", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public Atleta Atleta
		{
			get
			{
				return this._Atleta.Entity;
			}
			set
			{
				Atleta previousValue = this._Atleta.Entity;
				if (((previousValue != value) 
							|| (this._Atleta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Atleta.Entity = null;
						previousValue.ProgrammazioneIncontros.Remove(this);
					}
					this._Atleta.Entity = value;
					if ((value != null))
					{
						value.ProgrammazioneIncontros.Add(this);
						this._CodiceFiscaleAtleta1 = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscaleAtleta1 = default(string);
					}
					this.SendPropertyChanged("Atleta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Atleta_ProgrammazioneIncontro1", Storage="_Atleta1", ThisKey="CodiceFiscaleAtleta2", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public Atleta Atleta1
		{
			get
			{
				return this._Atleta1.Entity;
			}
			set
			{
				Atleta previousValue = this._Atleta1.Entity;
				if (((previousValue != value) 
							|| (this._Atleta1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Atleta1.Entity = null;
						previousValue.ProgrammazioneIncontros1.Remove(this);
					}
					this._Atleta1.Entity = value;
					if ((value != null))
					{
						value.ProgrammazioneIncontros1.Add(this);
						this._CodiceFiscaleAtleta2 = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscaleAtleta2 = default(string);
					}
					this.SendPropertyChanged("Atleta1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CaratteristicheIncontros(CaratteristicheIncontro entity)
		{
			this.SendPropertyChanging();
			entity.ProgrammazioneIncontro = this;
		}
		
		private void detach_CaratteristicheIncontros(CaratteristicheIncontro entity)
		{
			this.SendPropertyChanging();
			entity.ProgrammazioneIncontro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Record")]
	public partial class Record : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceRecord;
		
		private string _CodiceFiscaleAtleta;
		
		private string _Vittorie;
		
		private string _Sconfitte;
		
		private string _Pareggi;
		
		private EntityRef<Atleta> _Atleta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceRecordChanging(string value);
    partial void OnCodiceRecordChanged();
    partial void OnCodiceFiscaleAtletaChanging(string value);
    partial void OnCodiceFiscaleAtletaChanged();
    partial void OnVittorieChanging(string value);
    partial void OnVittorieChanged();
    partial void OnSconfitteChanging(string value);
    partial void OnSconfitteChanged();
    partial void OnPareggiChanging(string value);
    partial void OnPareggiChanged();
    #endregion
		
		public Record()
		{
			this._Atleta = default(EntityRef<Atleta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceRecord", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceRecord
		{
			get
			{
				return this._CodiceRecord;
			}
			set
			{
				if ((this._CodiceRecord != value))
				{
					this.OnCodiceRecordChanging(value);
					this.SendPropertyChanging();
					this._CodiceRecord = value;
					this.SendPropertyChanged("CodiceRecord");
					this.OnCodiceRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscaleAtleta", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string CodiceFiscaleAtleta
		{
			get
			{
				return this._CodiceFiscaleAtleta;
			}
			set
			{
				if ((this._CodiceFiscaleAtleta != value))
				{
					if (this._Atleta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleAtletaChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscaleAtleta = value;
					this.SendPropertyChanged("CodiceFiscaleAtleta");
					this.OnCodiceFiscaleAtletaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vittorie", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Vittorie
		{
			get
			{
				return this._Vittorie;
			}
			set
			{
				if ((this._Vittorie != value))
				{
					this.OnVittorieChanging(value);
					this.SendPropertyChanging();
					this._Vittorie = value;
					this.SendPropertyChanged("Vittorie");
					this.OnVittorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sconfitte", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Sconfitte
		{
			get
			{
				return this._Sconfitte;
			}
			set
			{
				if ((this._Sconfitte != value))
				{
					this.OnSconfitteChanging(value);
					this.SendPropertyChanging();
					this._Sconfitte = value;
					this.SendPropertyChanged("Sconfitte");
					this.OnSconfitteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pareggi", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Pareggi
		{
			get
			{
				return this._Pareggi;
			}
			set
			{
				if ((this._Pareggi != value))
				{
					this.OnPareggiChanging(value);
					this.SendPropertyChanging();
					this._Pareggi = value;
					this.SendPropertyChanged("Pareggi");
					this.OnPareggiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Atleta_Record", Storage="_Atleta", ThisKey="CodiceFiscaleAtleta", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public Atleta Atleta
		{
			get
			{
				return this._Atleta.Entity;
			}
			set
			{
				Atleta previousValue = this._Atleta.Entity;
				if (((previousValue != value) 
							|| (this._Atleta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Atleta.Entity = null;
						previousValue.Records.Remove(this);
					}
					this._Atleta.Entity = value;
					if ((value != null))
					{
						value.Records.Add(this);
						this._CodiceFiscaleAtleta = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscaleAtleta = default(string);
					}
					this.SendPropertyChanged("Atleta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sponsor")]
	public partial class Sponsor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NomeSposor;
		
		private EntitySet<SponsorizzazioneTeam> _SponsorizzazioneTeams;
		
		private EntitySet<SponsorizzazioneIncontro> _SponsorizzazioneIncontros;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeSposorChanging(string value);
    partial void OnNomeSposorChanged();
    #endregion
		
		public Sponsor()
		{
			this._SponsorizzazioneTeams = new EntitySet<SponsorizzazioneTeam>(new Action<SponsorizzazioneTeam>(this.attach_SponsorizzazioneTeams), new Action<SponsorizzazioneTeam>(this.detach_SponsorizzazioneTeams));
			this._SponsorizzazioneIncontros = new EntitySet<SponsorizzazioneIncontro>(new Action<SponsorizzazioneIncontro>(this.attach_SponsorizzazioneIncontros), new Action<SponsorizzazioneIncontro>(this.detach_SponsorizzazioneIncontros));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeSposor", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NomeSposor
		{
			get
			{
				return this._NomeSposor;
			}
			set
			{
				if ((this._NomeSposor != value))
				{
					this.OnNomeSposorChanging(value);
					this.SendPropertyChanging();
					this._NomeSposor = value;
					this.SendPropertyChanged("NomeSposor");
					this.OnNomeSposorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sponsor_SponsorizzazioneTeam", Storage="_SponsorizzazioneTeams", ThisKey="NomeSposor", OtherKey="NomeSposor")]
		public EntitySet<SponsorizzazioneTeam> SponsorizzazioneTeams
		{
			get
			{
				return this._SponsorizzazioneTeams;
			}
			set
			{
				this._SponsorizzazioneTeams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sponsor_SponsorizzazioneIncontro", Storage="_SponsorizzazioneIncontros", ThisKey="NomeSposor", OtherKey="NomeSposor")]
		public EntitySet<SponsorizzazioneIncontro> SponsorizzazioneIncontros
		{
			get
			{
				return this._SponsorizzazioneIncontros;
			}
			set
			{
				this._SponsorizzazioneIncontros.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SponsorizzazioneTeams(SponsorizzazioneTeam entity)
		{
			this.SendPropertyChanging();
			entity.Sponsor = this;
		}
		
		private void detach_SponsorizzazioneTeams(SponsorizzazioneTeam entity)
		{
			this.SendPropertyChanging();
			entity.Sponsor = null;
		}
		
		private void attach_SponsorizzazioneIncontros(SponsorizzazioneIncontro entity)
		{
			this.SendPropertyChanging();
			entity.Sponsor = this;
		}
		
		private void detach_SponsorizzazioneIncontros(SponsorizzazioneIncontro entity)
		{
			this.SendPropertyChanging();
			entity.Sponsor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SponsorizzazioneTeam")]
	public partial class SponsorizzazioneTeam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NomeSposor;
		
		private string _CodiceTeam;
		
		private EntityRef<Sponsor> _Sponsor;
		
		private EntityRef<Team> _Team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeSposorChanging(string value);
    partial void OnNomeSposorChanged();
    partial void OnCodiceTeamChanging(string value);
    partial void OnCodiceTeamChanged();
    #endregion
		
		public SponsorizzazioneTeam()
		{
			this._Sponsor = default(EntityRef<Sponsor>);
			this._Team = default(EntityRef<Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeSposor", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NomeSposor
		{
			get
			{
				return this._NomeSposor;
			}
			set
			{
				if ((this._NomeSposor != value))
				{
					if (this._Sponsor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeSposorChanging(value);
					this.SendPropertyChanging();
					this._NomeSposor = value;
					this.SendPropertyChanged("NomeSposor");
					this.OnNomeSposorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceTeam", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceTeam
		{
			get
			{
				return this._CodiceTeam;
			}
			set
			{
				if ((this._CodiceTeam != value))
				{
					if (this._Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceTeamChanging(value);
					this.SendPropertyChanging();
					this._CodiceTeam = value;
					this.SendPropertyChanged("CodiceTeam");
					this.OnCodiceTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sponsor_SponsorizzazioneTeam", Storage="_Sponsor", ThisKey="NomeSposor", OtherKey="NomeSposor", IsForeignKey=true)]
		public Sponsor Sponsor
		{
			get
			{
				return this._Sponsor.Entity;
			}
			set
			{
				Sponsor previousValue = this._Sponsor.Entity;
				if (((previousValue != value) 
							|| (this._Sponsor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sponsor.Entity = null;
						previousValue.SponsorizzazioneTeams.Remove(this);
					}
					this._Sponsor.Entity = value;
					if ((value != null))
					{
						value.SponsorizzazioneTeams.Add(this);
						this._NomeSposor = value.NomeSposor;
					}
					else
					{
						this._NomeSposor = default(string);
					}
					this.SendPropertyChanged("Sponsor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_SponsorizzazioneTeam", Storage="_Team", ThisKey="CodiceTeam", OtherKey="CodiceTeam", IsForeignKey=true)]
		public Team Team
		{
			get
			{
				return this._Team.Entity;
			}
			set
			{
				Team previousValue = this._Team.Entity;
				if (((previousValue != value) 
							|| (this._Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team.Entity = null;
						previousValue.SponsorizzazioneTeams.Remove(this);
					}
					this._Team.Entity = value;
					if ((value != null))
					{
						value.SponsorizzazioneTeams.Add(this);
						this._CodiceTeam = value.CodiceTeam;
					}
					else
					{
						this._CodiceTeam = default(string);
					}
					this.SendPropertyChanged("Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SponsorizzazioneIncontro")]
	public partial class SponsorizzazioneIncontro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NomeSposor;
		
		private int _CodiceCaratteristicheIncontro;
		
		private EntityRef<CaratteristicheIncontro> _CaratteristicheIncontro;
		
		private EntityRef<Sponsor> _Sponsor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeSposorChanging(string value);
    partial void OnNomeSposorChanged();
    partial void OnCodiceCaratteristicheIncontroChanging(int value);
    partial void OnCodiceCaratteristicheIncontroChanged();
    #endregion
		
		public SponsorizzazioneIncontro()
		{
			this._CaratteristicheIncontro = default(EntityRef<CaratteristicheIncontro>);
			this._Sponsor = default(EntityRef<Sponsor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeSposor", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NomeSposor
		{
			get
			{
				return this._NomeSposor;
			}
			set
			{
				if ((this._NomeSposor != value))
				{
					if (this._Sponsor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeSposorChanging(value);
					this.SendPropertyChanging();
					this._NomeSposor = value;
					this.SendPropertyChanged("NomeSposor");
					this.OnNomeSposorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceCaratteristicheIncontro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodiceCaratteristicheIncontro
		{
			get
			{
				return this._CodiceCaratteristicheIncontro;
			}
			set
			{
				if ((this._CodiceCaratteristicheIncontro != value))
				{
					if (this._CaratteristicheIncontro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceCaratteristicheIncontroChanging(value);
					this.SendPropertyChanging();
					this._CodiceCaratteristicheIncontro = value;
					this.SendPropertyChanged("CodiceCaratteristicheIncontro");
					this.OnCodiceCaratteristicheIncontroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CaratteristicheIncontro_SponsorizzazioneIncontro", Storage="_CaratteristicheIncontro", ThisKey="CodiceCaratteristicheIncontro", OtherKey="CodiceCaratteristicheIncontro", IsForeignKey=true)]
		public CaratteristicheIncontro CaratteristicheIncontro
		{
			get
			{
				return this._CaratteristicheIncontro.Entity;
			}
			set
			{
				CaratteristicheIncontro previousValue = this._CaratteristicheIncontro.Entity;
				if (((previousValue != value) 
							|| (this._CaratteristicheIncontro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CaratteristicheIncontro.Entity = null;
						previousValue.SponsorizzazioneIncontros.Remove(this);
					}
					this._CaratteristicheIncontro.Entity = value;
					if ((value != null))
					{
						value.SponsorizzazioneIncontros.Add(this);
						this._CodiceCaratteristicheIncontro = value.CodiceCaratteristicheIncontro;
					}
					else
					{
						this._CodiceCaratteristicheIncontro = default(int);
					}
					this.SendPropertyChanged("CaratteristicheIncontro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sponsor_SponsorizzazioneIncontro", Storage="_Sponsor", ThisKey="NomeSposor", OtherKey="NomeSposor", IsForeignKey=true)]
		public Sponsor Sponsor
		{
			get
			{
				return this._Sponsor.Entity;
			}
			set
			{
				Sponsor previousValue = this._Sponsor.Entity;
				if (((previousValue != value) 
							|| (this._Sponsor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sponsor.Entity = null;
						previousValue.SponsorizzazioneIncontros.Remove(this);
					}
					this._Sponsor.Entity = value;
					if ((value != null))
					{
						value.SponsorizzazioneIncontros.Add(this);
						this._NomeSposor = value.NomeSposor;
					}
					else
					{
						this._NomeSposor = default(string);
					}
					this.SendPropertyChanged("Sponsor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Team")]
	public partial class Team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceTeam;
		
		private string _CodiceFiscaleAllenatore;
		
		private string _NomeTeam;
		
		private EntitySet<Atleta> _Atletas;
		
		private EntitySet<EntrataUscita> _EntrataUscitas;
		
		private EntitySet<Fisioterapista> _Fisioterapistas;
		
		private EntitySet<Pisicologo> _Pisicologos;
		
		private EntitySet<SponsorizzazioneTeam> _SponsorizzazioneTeams;
		
		private EntityRef<Allenatore> _Allenatore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceTeamChanging(string value);
    partial void OnCodiceTeamChanged();
    partial void OnCodiceFiscaleAllenatoreChanging(string value);
    partial void OnCodiceFiscaleAllenatoreChanged();
    partial void OnNomeTeamChanging(string value);
    partial void OnNomeTeamChanged();
    #endregion
		
		public Team()
		{
			this._Atletas = new EntitySet<Atleta>(new Action<Atleta>(this.attach_Atletas), new Action<Atleta>(this.detach_Atletas));
			this._EntrataUscitas = new EntitySet<EntrataUscita>(new Action<EntrataUscita>(this.attach_EntrataUscitas), new Action<EntrataUscita>(this.detach_EntrataUscitas));
			this._Fisioterapistas = new EntitySet<Fisioterapista>(new Action<Fisioterapista>(this.attach_Fisioterapistas), new Action<Fisioterapista>(this.detach_Fisioterapistas));
			this._Pisicologos = new EntitySet<Pisicologo>(new Action<Pisicologo>(this.attach_Pisicologos), new Action<Pisicologo>(this.detach_Pisicologos));
			this._SponsorizzazioneTeams = new EntitySet<SponsorizzazioneTeam>(new Action<SponsorizzazioneTeam>(this.attach_SponsorizzazioneTeams), new Action<SponsorizzazioneTeam>(this.detach_SponsorizzazioneTeams));
			this._Allenatore = default(EntityRef<Allenatore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceTeam", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceTeam
		{
			get
			{
				return this._CodiceTeam;
			}
			set
			{
				if ((this._CodiceTeam != value))
				{
					this.OnCodiceTeamChanging(value);
					this.SendPropertyChanging();
					this._CodiceTeam = value;
					this.SendPropertyChanged("CodiceTeam");
					this.OnCodiceTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscaleAllenatore", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string CodiceFiscaleAllenatore
		{
			get
			{
				return this._CodiceFiscaleAllenatore;
			}
			set
			{
				if ((this._CodiceFiscaleAllenatore != value))
				{
					if (this._Allenatore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleAllenatoreChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscaleAllenatore = value;
					this.SendPropertyChanged("CodiceFiscaleAllenatore");
					this.OnCodiceFiscaleAllenatoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeTeam", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string NomeTeam
		{
			get
			{
				return this._NomeTeam;
			}
			set
			{
				if ((this._NomeTeam != value))
				{
					this.OnNomeTeamChanging(value);
					this.SendPropertyChanging();
					this._NomeTeam = value;
					this.SendPropertyChanged("NomeTeam");
					this.OnNomeTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Atleta", Storage="_Atletas", ThisKey="CodiceTeam", OtherKey="CodiceTeam")]
		public EntitySet<Atleta> Atletas
		{
			get
			{
				return this._Atletas;
			}
			set
			{
				this._Atletas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_EntrataUscita", Storage="_EntrataUscitas", ThisKey="CodiceTeam", OtherKey="CodiceTeam")]
		public EntitySet<EntrataUscita> EntrataUscitas
		{
			get
			{
				return this._EntrataUscitas;
			}
			set
			{
				this._EntrataUscitas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Fisioterapista", Storage="_Fisioterapistas", ThisKey="CodiceTeam", OtherKey="CodiceTeam")]
		public EntitySet<Fisioterapista> Fisioterapistas
		{
			get
			{
				return this._Fisioterapistas;
			}
			set
			{
				this._Fisioterapistas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Pisicologo", Storage="_Pisicologos", ThisKey="CodiceTeam", OtherKey="CodiceTeam")]
		public EntitySet<Pisicologo> Pisicologos
		{
			get
			{
				return this._Pisicologos;
			}
			set
			{
				this._Pisicologos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_SponsorizzazioneTeam", Storage="_SponsorizzazioneTeams", ThisKey="CodiceTeam", OtherKey="CodiceTeam")]
		public EntitySet<SponsorizzazioneTeam> SponsorizzazioneTeams
		{
			get
			{
				return this._SponsorizzazioneTeams;
			}
			set
			{
				this._SponsorizzazioneTeams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Allenatore_Team", Storage="_Allenatore", ThisKey="CodiceFiscaleAllenatore", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public Allenatore Allenatore
		{
			get
			{
				return this._Allenatore.Entity;
			}
			set
			{
				Allenatore previousValue = this._Allenatore.Entity;
				if (((previousValue != value) 
							|| (this._Allenatore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Allenatore.Entity = null;
						previousValue.Teams.Remove(this);
					}
					this._Allenatore.Entity = value;
					if ((value != null))
					{
						value.Teams.Add(this);
						this._CodiceFiscaleAllenatore = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscaleAllenatore = default(string);
					}
					this.SendPropertyChanged("Allenatore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Atletas(Atleta entity)
		{
			this.SendPropertyChanging();
			entity.Team = this;
		}
		
		private void detach_Atletas(Atleta entity)
		{
			this.SendPropertyChanging();
			entity.Team = null;
		}
		
		private void attach_EntrataUscitas(EntrataUscita entity)
		{
			this.SendPropertyChanging();
			entity.Team = this;
		}
		
		private void detach_EntrataUscitas(EntrataUscita entity)
		{
			this.SendPropertyChanging();
			entity.Team = null;
		}
		
		private void attach_Fisioterapistas(Fisioterapista entity)
		{
			this.SendPropertyChanging();
			entity.Team = this;
		}
		
		private void detach_Fisioterapistas(Fisioterapista entity)
		{
			this.SendPropertyChanging();
			entity.Team = null;
		}
		
		private void attach_Pisicologos(Pisicologo entity)
		{
			this.SendPropertyChanging();
			entity.Team = this;
		}
		
		private void detach_Pisicologos(Pisicologo entity)
		{
			this.SendPropertyChanging();
			entity.Team = null;
		}
		
		private void attach_SponsorizzazioneTeams(SponsorizzazioneTeam entity)
		{
			this.SendPropertyChanging();
			entity.Team = this;
		}
		
		private void detach_SponsorizzazioneTeams(SponsorizzazioneTeam entity)
		{
			this.SendPropertyChanging();
			entity.Team = null;
		}
	}
}
#pragma warning restore 1591
